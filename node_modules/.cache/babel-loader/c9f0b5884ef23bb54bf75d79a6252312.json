{"ast":null,"code":"var _jsxFileName = \"/home/fateme/Documents/projects/yadet2/src/components/cource-panel/cource-panel.js\";\nimport React from 'react';\nimport Level from './../level/level';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport loadlevels from '../../features/questions/levelsApi';\nimport './course-panel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class coursePanel extends React.Component {\n  constructor(props) {\n    super(props); //this is the whole panel that should be given from the data base\n\n    this.state = {\n      //degree = which round showen as stars under it\n      //progress = progress :)\n      levels: [],\n      DataisLoaded: Boolean\n    };\n    const dispatch = useDispatch();\n  }\n\n  componentDidMount() {\n    // fetch(\n    //     \"http://localhost:1337/levels\")\n    //     .then((res) => res.json())\n    //     .then((json) => {\n    //         this.setState({\n    //             levels: json,\n    //             DataisLoaded: true\n    //         });\n    //     })\n    this.setState({\n      levels: loadlevels,\n      DataisLoaded: true\n    }); // console.log('%%%%%%: ' + loadlevels)\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      levels\n    } = this.state;\n\n    if (!DataisLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: this.state.levels.map((level, step) => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              className: \"panel-row\",\n              children: /*#__PURE__*/_jsxDEV(Level, { ...this.props,\n                courses: level.courses,\n                grid: level.grid,\n                active: level.active,\n                id: level.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, step, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/components/cource-panel/cource-panel.js"],"names":["React","Level","Container","Col","Row","useSelector","useDispatch","loadlevels","coursePanel","Component","constructor","props","state","levels","DataisLoaded","Boolean","dispatch","componentDidMount","setState","render","map","level","step","courses","grid","active","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,oBAAP;;AAEA,eAAe,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACAC,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,YAAY,EAAEC;AAJL,KAAb;AAMA,UAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACH;;AAEDW,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKC,QAAL,CAAc;AACVL,MAAAA,MAAM,EAAEN,UADE;AAEVO,MAAAA,YAAY,EAAE;AAFJ,KAAd,EAVgB,CAchB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEL,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA2B,KAAKD,KAAtC;;AACA,QAAI,CAACE,YAAL,EAAmB;AACf,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKK;AACD,0BAEI,QAAE,SAAF;AAAA,+BAEI,QAAC,GAAD;AAAA,oBACK,KAAKF,KAAL,CAAWC,MAAX,CAAkBO,GAAlB,CAAsB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpC,gCACI,QAAC,GAAD;AAAgB,cAAA,SAAS,EAAC,WAA1B;AAAA,qCACI,QAAC,KAAD,OACQ,KAAKX,KADb;AAEI,gBAAA,OAAO,EAAEU,KAAK,CAACE,OAFnB;AAGI,gBAAA,IAAI,EAAEF,KAAK,CAACG,IAHhB;AAII,gBAAA,MAAM,EAAEH,KAAK,CAACI,MAJlB;AAKI,gBAAA,EAAE,EAAEJ,KAAK,CAACK;AALd;AAAA;AAAA;AAAA;AAAA;AADJ,eAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAWH,WAZA;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAsBH;AACJ;;AA7DoD","sourcesContent":["import React from 'react';\nimport Level from './../level/level';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport loadlevels from '../../features/questions/levelsApi';\nimport './course-panel.css'\n\nexport default class coursePanel extends React.Component {\n    constructor(props) {\n        super(props);\n        //this is the whole panel that should be given from the data base\n        this.state = {\n            //degree = which round showen as stars under it\n            //progress = progress :)\n            levels: [],\n            DataisLoaded: Boolean,\n        }\n        const dispatch = useDispatch()\n    }\n\n    componentDidMount() {\n        // fetch(\n        //     \"http://localhost:1337/levels\")\n        //     .then((res) => res.json())\n        //     .then((json) => {\n        //         this.setState({\n        //             levels: json,\n        //             DataisLoaded: true\n        //         });\n        //     })\n        this.setState({\n            levels: loadlevels,\n            DataisLoaded: true\n        });\n        // console.log('%%%%%%: ' + loadlevels)\n    }\n\n    render() {\n        const { DataisLoaded, levels } = this.state;\n        if (!DataisLoaded) {\n            return (\n                <div>wait...</div>\n            )\n        }\n        else {\n            return (\n\n                < Container >\n\n                    <Col>\n                        {this.state.levels.map((level, step) => {\n                            return (\n                                <Row key={step} className='panel-row'>\n                                    <Level\n                                        {...this.props}\n                                        courses={level.courses}\n                                        grid={level.grid}\n                                        active={level.active}\n                                        id={level.id}\n                                    />\n                                </Row>\n                            )\n                        })\n                        }\n                    </Col>\n                </Container >\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}