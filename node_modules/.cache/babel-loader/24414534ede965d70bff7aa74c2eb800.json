{"ast":null,"code":"var _jsxFileName = \"/home/fateme/Documents/projects/yadet2/src/components/level/level.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CustomCircularProgressbar from '../circular-progress-bar/circular-progress-bar';\nimport './level.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class level extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let courses = this.props.courses.slice();\n    let grid = this.props.grid.split(\"-\");\n    let active = this.props.active;\n    let id = this.props.id;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"levelContainer\",\n      style: {\n        backgroundColor: active ? 'transparent' : '#F3F2F2',\n        borderColor: active ? 'transparent' : 'lightgrey'\n      },\n      children: grid.map((grid, step) => {\n        let sliced = courses.splice(0, grid);\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: sliced.map((course, step2) => {\n            // let stepUse = step.toString();\n            return /*#__PURE__*/_jsxDEV(Col, {\n              xxs: \"auto\",\n              xs: \"auto\",\n              md: \"auto\",\n              sm: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(CustomCircularProgressbar, { ...this.props,\n                text: course.courseLabel,\n                degree: course.degree,\n                maxDegree: course.maxDegree,\n                progress: active ? course.progress : 0,\n                active: active,\n                step: course.id.toString(),\n                id: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 45\n              }, this)\n            }, step2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, this);\n          })\n        }, step, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/components/level/level.js"],"names":["React","Container","Row","Col","CustomCircularProgressbar","level","Component","constructor","props","render","courses","slice","grid","split","active","id","backgroundColor","borderColor","map","step","sliced","splice","course","step2","courseLabel","degree","maxDegree","progress","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,yBAAP,MAAsC,gDAAtC;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,CAAmBC,KAAnB,EAAd;AACA,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,KAAhB,CAAsB,GAAtB,CAAX;AACA,QAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;AACA,QAAIC,EAAE,GAAG,KAAKP,KAAL,CAAWO,EAApB;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAEF,MAAM,GACnB,aADmB,GAEnB,SAHD;AAIHG,QAAAA,WAAW,EAAEH,MAAM,GACf,aADe,GAEf;AAND,OADX;AAAA,gBAUKF,IAAI,CAACM,GAAL,CAAS,CAACN,IAAD,EAAOO,IAAP,KAAgB;AACtB,YAAIC,MAAM,GAAGV,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkBT,IAAlB,CAAb;AACA,4BACI,QAAC,GAAD;AAAgB,UAAA,SAAS,EAAC,wBAA1B;AAAA,oBAEQQ,MAAM,CAACF,GAAP,CAAW,CAACI,MAAD,EAASC,KAAT,KAAmB;AAC1B;AACA,gCACI,QAAC,GAAD;AAAiB,cAAA,GAAG,EAAC,MAArB;AACI,cAAA,EAAE,EAAC,MADP;AACc,cAAA,EAAE,EAAC,MADjB;AACwB,cAAA,EAAE,EAAC,MAD3B;AAAA,qCAEI,QAAC,yBAAD,OACQ,KAAKf,KADb;AAEI,gBAAA,IAAI,EAAEc,MAAM,CAACE,WAFjB;AAGI,gBAAA,MAAM,EAAEF,MAAM,CAACG,MAHnB;AAII,gBAAA,SAAS,EAAEH,MAAM,CAACI,SAJtB;AAKI,gBAAA,QAAQ,EAAEZ,MAAM,GACZQ,MAAM,CAACK,QADK,GAEZ,CAPR;AAQI,gBAAA,MAAM,EAAEb,MARZ;AASI,gBAAA,IAAI,EAAEQ,MAAM,CAACP,EAAP,CAAUa,QAAV,EATV;AAUI,gBAAA,EAAE,EAAEb;AAVR;AAAA;AAAA;AAAA;AAAA;AAFJ,eAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAiBH,WAnBD;AAFR,WAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AA0BH,OA5BA;AAVL;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AAtD8C","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CustomCircularProgressbar from '../circular-progress-bar/circular-progress-bar';\nimport './level.css';\n\nexport default class level extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n\n        let courses = this.props.courses.slice()\n        let grid = this.props.grid.split(\"-\")\n        let active = this.props.active;\n        let id = this.props.id;\n        return (\n            <Container className='levelContainer'\n                style={{\n                    backgroundColor: active ?\n                        'transparent' :\n                        '#F3F2F2',\n                    borderColor: active ?\n                        'transparent' :\n                        'lightgrey'\n                }}\n            >\n                {grid.map((grid, step) => {\n                    let sliced = courses.splice(0, grid)\n                    return (\n                        <Row key={step} className=\"justify-content-center\">\n                            {\n                                sliced.map((course, step2) => {\n                                    // let stepUse = step.toString();\n                                    return (\n                                        <Col key={step2} xxs=\"auto\"\n                                            xs=\"auto\" md=\"auto\" sm=\"auto\">\n                                            <CustomCircularProgressbar\n                                                {...this.props}\n                                                text={course.courseLabel}\n                                                degree={course.degree}\n                                                maxDegree={course.maxDegree}\n                                                progress={active ?\n                                                    course.progress :\n                                                    0}\n                                                active={active}\n                                                step={course.id.toString()}\n                                                id={id}\n                                            />\n                                        </Col>\n                                    )\n                                })\n                            }\n                        </Row>\n                    )\n                })}\n            </Container>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}