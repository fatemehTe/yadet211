{"ast":null,"code":"var _jsxFileName = \"/home/fateme/Documents/projects/yadet2/src/layout/lessonLayout/lessonLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Container, ProgressBar, Col, Row } from \"react-bootstrap\";\nimport CheckCorrect from \"../../components/checkCorrect/checkCorrect\";\nimport Lesson from \"../../pages/lesson/lesson\";\nimport { BrowserRouter as Router, Link, useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport cross from './../../assets/images/cross.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadlevels, selectLevels } from '../../features/question/questions.slice';\nimport './lessonLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LessonLayout(props) {\n  _s();\n\n  //questions should be asked from data base. step is for the lesson and the degree and the progress \n  const levels = useSelector(selectLevels);\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadlevels());\n  }, []);\n  const {\n    step\n  } = useParams();\n  const [q, setQ] = useState([]);\n  const [questionQueue, setQuestionQueue] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const getQuestions = useCallback(async () => {\n    let url = 'http://localhost:1337/courses';\n\n    if (step) {\n      url += `/${step}`;\n    }\n\n    await fetch(url).then(res => res.json()).then(res => {\n      setQ(res.questions);\n      setQuestionLength(res.questions.length);\n    });\n  });\n  useEffect(() => {\n    getQuestions();\n    let initialQuestionQueue = [];\n\n    for (let i = 0; i < questionLength; i++) {\n      initialQuestionQueue[i] = i;\n    }\n\n    setQuestionQueue(initialQuestionQueue);\n\n    for (let i = 0; i < q.length; i++) {\n      let question = {\n        Question: q[i].text,\n        Options: q[i].options,\n        Answer: q[i].anwser,\n        Tip: q[i].tip\n      };\n      questions[i] = question;\n    }\n\n    setQuestions(questions);\n  }, []);\n  const [progress, setProgress] = useState(0);\n  const [varient, setVarient] = useState(\"secondary\");\n  const [userAnswer, setUserAnswer] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [status, setStatus] = useState(\"check\");\n  const [Continue, setContinue] = useState(false);\n  const [questionCounter, setQuestionCounter] = useState(0);\n  const [optionClicked, setOptionClicked] = useState(0);\n  const [questionLength, setQuestionLength] = useState(0);\n  const progressProgress = 100 / questions.length;\n  const history = useHistory();\n\n  const handleCheckClick = () => {\n    setContinue(true);\n    setVarient(() => userAnswer === 1 ? \"success\" : userAnswer === -1 ? \"danger\" : \"secondary\");\n    setStatus(() => userAnswer === 1 ? \"success\" : userAnswer === -1 ? \"fail\" : null);\n    setProgress(progress + (userAnswer === 1 ? progressProgress : 0));\n\n    if (optionClicked !== correctAnswer) {\n      setQuestionQueue([...questionQueue, questionQueue[questionCounter]]);\n    }\n  };\n\n  const handleContinueClick = () => {\n    setContinue(false);\n    setOptionClicked(0);\n    setQuestionCounter(() => questionCounter + 1 < questionQueue.length ? questionCounter + 1 : progress === 100 ? history.push('/endLessonStep/' + step) : null);\n    setVarient(\"secondary\");\n    setStatus(\"check\");\n  };\n\n  const handleCrossClick = () => {\n    history.push('/');\n  };\n\n  const onClick = i => {\n    setOptionClicked(i);\n    setVarient(\"primary\");\n\n    if (i === correctAnswer) {\n      setUserAnswer(1);\n    } else {\n      setUserAnswer(-1);\n    }\n  };\n\n  const currentQuestion = questions.slice(questionQueue[questionCounter], questionQueue[questionCounter] + 1);\n  let currentCorrectAnswer = 0;\n  currentQuestion.map(question => {\n    currentCorrectAnswer = question.Anwser;\n    setCorrectAnswer(currentCorrectAnswer);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainLesson\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mainProgressBar\",\n      children: [progress !== 100 ? /*#__PURE__*/_jsxDEV(Col, {\n        sm: 1,\n        xs: 1,\n        className: \"crossCol\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: 20\n          },\n          src: cross,\n          alt: \"cross\",\n          onClick: handleCrossClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this) : '', /*#__PURE__*/_jsxDEV(Col, {\n        sm: progress != 100 ? 11 : 12,\n        xs: progress != 100 ? 11 : 12,\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          className: progress !== 100 ? 'progressBar' : 'progressBarNoCross'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), currentQuestion.map((question, key) => {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mainQuestion\",\n        children: /*#__PURE__*/_jsxDEV(Lesson, {\n          onClick: i => onClick(i),\n          question: question.Question,\n          options: question.Options,\n          correct: currentCorrectAnswer,\n          status: status,\n          optionClicked: optionClicked,\n          Continue: Continue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CheckCorrect, {\n      className: \"mainCheckCorrect\",\n      onClick: handleCheckClick,\n      onContinueClick: handleContinueClick,\n      varient: varient,\n      status: status,\n      Continue: Continue,\n      optionClicked: optionClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LessonLayout, \"eNA7HdfqVi3CjoRqktDQYvF8amQ=\", false, function () {\n  return [useSelector, useDispatch, useParams, useHistory];\n});\n\n_c = LessonLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"LessonLayout\");","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/layout/lessonLayout/lessonLayout.js"],"names":["React","useState","useEffect","useCallback","Container","ProgressBar","Col","Row","CheckCorrect","Lesson","BrowserRouter","Router","Link","useHistory","useParams","cross","useSelector","useDispatch","loadlevels","selectLevels","LessonLayout","props","levels","dispatch","step","q","setQ","questionQueue","setQuestionQueue","questions","setQuestions","getQuestions","url","fetch","then","res","json","setQuestionLength","length","initialQuestionQueue","i","questionLength","question","Question","text","Options","options","Answer","anwser","Tip","tip","progress","setProgress","varient","setVarient","userAnswer","setUserAnswer","correctAnswer","setCorrectAnswer","status","setStatus","Continue","setContinue","questionCounter","setQuestionCounter","optionClicked","setOptionClicked","progressProgress","history","handleCheckClick","handleContinueClick","push","handleCrossClick","onClick","currentQuestion","slice","currentCorrectAnswer","map","Anwser","width","justifyContent","alignItems","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Container, ProgressBar, Col, Row } from \"react-bootstrap\";\nimport CheckCorrect from \"../../components/checkCorrect/checkCorrect\";\nimport Lesson from \"../../pages/lesson/lesson\";\nimport {\n    BrowserRouter as Router, Link, useHistory\n} from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport cross from './../../assets/images/cross.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadlevels, selectLevels } from '../../features/question/questions.slice';\nimport './lessonLayout.css';\n\nexport default function LessonLayout(props) {\n    //questions should be asked from data base. step is for the lesson and the degree and the progress \n    const levels = useSelector(selectLevels)\n\n    let dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadlevels());\n    }, [])\n    const { step } = useParams();\n    const [q, setQ] = useState([]);\n    const [questionQueue, setQuestionQueue] = useState(0);\n    const [questions, setQuestions] = useState([])\n\n    const getQuestions = useCallback(async () => {\n        let url = 'http://localhost:1337/courses';\n        if (step) {\n            url += `/${step}`;\n        }\n        await fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                setQ(res.questions);\n                setQuestionLength(res.questions.length)\n            });\n    })\n\n    useEffect(() => {\n\n        getQuestions()\n\n        let initialQuestionQueue = [];\n        for (let i = 0; i < questionLength; i++) {\n            initialQuestionQueue[i] = i\n        }\n        setQuestionQueue(initialQuestionQueue)\n\n        for (let i = 0; i < q.length; i++) {\n            let question = {\n                Question: q[i].text,\n                Options: q[i].options,\n                Answer: q[i].anwser,\n                Tip: q[i].tip\n            }\n            questions[i] = question\n        }\n        setQuestions(questions)\n    }, []);\n\n    const [progress, setProgress] = useState(0);\n    const [varient, setVarient] = useState(\"secondary\");\n    const [userAnswer, setUserAnswer] = useState(0);\n    const [correctAnswer, setCorrectAnswer] = useState(0);\n    const [status, setStatus] = useState(\"check\");\n    const [Continue, setContinue] = useState(false);\n    const [questionCounter, setQuestionCounter] = useState(0);\n    const [optionClicked, setOptionClicked] = useState(0);\n    const [questionLength, setQuestionLength] = useState(0);\n\n    const progressProgress = 100 / questions.length;\n    const history = useHistory()\n\n    const handleCheckClick = () => {\n        setContinue(true)\n        setVarient(() => (\n            userAnswer === 1 ? \"success\" :\n                (userAnswer === -1 ? \"danger\" :\n                    (\"secondary\"))\n        ))\n        setStatus(() => (\n            userAnswer === 1 ? \"success\" :\n                (userAnswer === -1 ? \"fail\" : null)\n        ))\n        setProgress(progress + (userAnswer === 1 ? progressProgress : 0));\n\n        if (optionClicked !== correctAnswer) {\n            setQuestionQueue([...questionQueue, questionQueue[questionCounter]]);\n        }\n    }\n    const handleContinueClick = () => {\n        setContinue(false)\n        setOptionClicked(0)\n        setQuestionCounter(() => (\n            questionCounter + 1 < questionQueue.length ? questionCounter + 1 :\n                (progress === 100 ?\n                    history.push('/endLessonStep/' + step)\n                    : null)\n\n        ))\n        setVarient(\"secondary\")\n        setStatus(\"check\")\n    }\n    const handleCrossClick = () => {\n        history.push('/')\n    }\n    const onClick = (i) => {\n        setOptionClicked(i)\n        setVarient(\"primary\")\n        if (i === correctAnswer) {\n            setUserAnswer(1)\n        } else {\n            setUserAnswer(-1);\n        }\n    }\n\n\n    const currentQuestion =\n        questions.slice(questionQueue[questionCounter], questionQueue[questionCounter] + 1)\n    let currentCorrectAnswer = 0;\n    currentQuestion.map((question) => {\n\n        currentCorrectAnswer = question.Anwser;\n        setCorrectAnswer(currentCorrectAnswer);\n\n    })\n\n    return (\n        <div className='mainLesson'>\n            <Row\n                className='mainProgressBar'\n            >\n                {progress !== 100 ?\n                    <Col sm={1} xs={1}\n                        className='crossCol'\n                    >\n                        <img style={{ width: 20 }} src={cross} alt=\"cross\"\n                            onClick={handleCrossClick} />\n                    </Col> :\n                    ''}\n                <Col sm={progress != 100 ? 11 : 12} xs={progress != 100 ? 11 : 12}\n                    style={{ justifyContent: 'center', alignItems: 'center' }}\n                >\n                    <ProgressBar now={progress}\n                        className={progress !== 100 ? 'progressBar' : 'progressBarNoCross'}\n                    /></Col>\n            </Row>\n            {\n                currentQuestion.map((question, key) => {\n                    return (\n                        <Container className='mainQuestion' key={key}>\n                            <Lesson onClick={(i) => onClick(i)}\n                                question={question.Question}\n                                options={question.Options}\n                                correct={currentCorrectAnswer}\n                                status={status}\n                                optionClicked={optionClicked}\n                                Continue={Continue}\n                            />\n                        </Container>\n                    )\n                })\n            }\n            <CheckCorrect className='mainCheckCorrect'\n                onClick={handleCheckClick}\n                onContinueClick={handleContinueClick}\n                varient={varient}\n                status={status}\n                Continue={Continue}\n                optionClicked={optionClicked}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}