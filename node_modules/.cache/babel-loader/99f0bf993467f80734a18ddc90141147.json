{"ast":null,"code":"var _jsxFileName = \"/home/fateme/Documents/projects/yadet2/src/components/cource-panel/cource-panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Level from './../level/level';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadlevels, selectLevels } from '../../features/levels/levels.slice';\nimport './course-panel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoursePanel(props) {\n  _s();\n\n  const levelGet = useSelector(selectLevels);\n  const [levels, setLevels] = useState([]);\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadlevels());\n  }, []);\n\n  const GetData = () => {\n    setLevels(levelGet);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: levels.map((level, step) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"panel-row\",\n          children: /*#__PURE__*/_jsxDEV(Level, { ...this.props,\n            courses: level.courses,\n            grid: level.grid,\n            active: level.active,\n            id: level.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, step, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CoursePanel, \"KmT3unPG9FBYAsVkwfu4bUBSQKY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CoursePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePanel\");","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/components/cource-panel/cource-panel.js"],"names":["React","useState","useEffect","Level","Container","Col","Row","useSelector","useDispatch","loadlevels","selectLevels","CoursePanel","props","levelGet","levels","setLevels","dispatch","GetData","map","level","step","courses","grid","active","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,oCAAzC;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,QAAQ,GAAGN,WAAW,CAACG,YAAD,CAA5B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIe,QAAQ,GAAGR,WAAW,EAA1B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,OAAO,GAAG,MAAM;AAElBF,IAAAA,SAAS,CAACF,QAAD,CAAT;AACH,GAHD;;AAIA,sBACI,QAAE,SAAF;AAAA,2BACI,QAAC,GAAD;AAAA,gBACKC,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzB,4BACI,QAAC,GAAD;AAAgB,UAAA,SAAS,EAAC,WAA1B;AAAA,iCACI,QAAC,KAAD,OACQ,KAAKR,KADb;AAEI,YAAA,OAAO,EAAEO,KAAK,CAACE,OAFnB;AAGI,YAAA,IAAI,EAAEF,KAAK,CAACG,IAHhB;AAII,YAAA,MAAM,EAAEH,KAAK,CAACI,MAJlB;AAKI,YAAA,EAAE,EAAEJ,KAAK,CAACK;AALd;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAjCuBT,W;UACHJ,W,EAGFC,W;;;KAJKG,W","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Level from './../level/level';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadlevels, selectLevels } from '../../features/levels/levels.slice';\nimport './course-panel.css'\n\nexport default function CoursePanel(props) {\n    const levelGet = useSelector(selectLevels)\n    const [levels, setLevels] = useState([]);\n\n    let dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadlevels());\n    }, [])\n\n    const GetData = () => {\n        \n        setLevels(levelGet)\n    }\n    return (\n        < Container >\n            <Col>\n                {levels.map((level, step) => {\n                    return (\n                        <Row key={step} className='panel-row'>\n                            <Level\n                                {...this.props}\n                                courses={level.courses}\n                                grid={level.grid}\n                                active={level.active}\n                                id={level.id}\n                            />\n                        </Row>\n                    )\n                })\n                }\n            </Col>\n        </Container >\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}