{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const loadlevels = createAsyncThunk('levels/loadLevels', async userId => {\n  try {\n    const response = await axios.get('http://localhost:1337/levels');\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst levelSlice = createSlice({\n  name: 'levels',\n  initialState: {\n    status: 'idle',\n    error: null,\n    levels: []\n  },\n  reducers: {},\n  extraReducers: {\n    // You can show loading state in the UI\n    [loadLevels.pending]: state => {\n      state.status = 'loading';\n      state.error = null;\n    },\n    // Render the API response\n    [loadLevels.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n      state.error = null;\n      state.levels = action.payload.data.levels;\n    },\n    // Display error state\n    [loadLevels.error]: (state, action) => {\n      state.status = 'error';\n      state.error = action.payload.error;\n    },\n    [loadLevels.rejected]: (state, action) => {\n      state.status = 'error';\n      state.levels = [];\n      state.error = action.payload.message;\n    }\n  }\n});","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/features/questions/levels.slice.js"],"names":["axios","createAsyncThunk","createSlice","loadlevels","userId","response","get","error","rejectWithValue","data","levelSlice","name","initialState","status","levels","reducers","extraReducers","loadLevels","pending","state","fulfilled","action","payload","rejected","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,mBAAD,EAAsB,MAAOG,MAAP,IAAkB;AAC9E,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,8BAAV,CAAvB;AACA,WAAOD,QAAP;AACH,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAOC,eAAe,CAACD,KAAK,CAACF,QAAN,CAAeI,IAAhB,CAAtB;AACD;AAEJ,CARyC,CAAnC;AAUP,MAAMC,UAAU,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,QADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,MADE;AAEVN,IAAAA,KAAK,EAAE,IAFG;AAGVO,IAAAA,MAAM,EAAE;AAHE,GAFe;AAO7BC,EAAAA,QAAQ,EAAC,EAPoB;AAQ7BC,EAAAA,aAAa,EAAE;AACX;AACA,KAACC,UAAU,CAACC,OAAZ,GAAuBC,KAAD,IAAU;AAC5BA,MAAAA,KAAK,CAACN,MAAN,GAAe,SAAf;AACAM,MAAAA,KAAK,CAACZ,KAAN,GAAc,IAAd;AACH,KALU;AAMX;AACA,KAACU,UAAU,CAACG,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAkB;AACtCF,MAAAA,KAAK,CAACN,MAAN,GAAe,WAAf;AACAM,MAAAA,KAAK,CAACZ,KAAN,GAAc,IAAd;AACAY,MAAAA,KAAK,CAACL,MAAN,GAAeO,MAAM,CAACC,OAAP,CAAeb,IAAf,CAAoBK,MAAnC;AACH,KAXU;AAYX;AACA,KAACG,UAAU,CAACV,KAAZ,GAAoB,CAACY,KAAD,EAAQE,MAAR,KAAkB;AAClCF,MAAAA,KAAK,CAACN,MAAN,GAAe,OAAf;AACAM,MAAAA,KAAK,CAACZ,KAAN,GAAcc,MAAM,CAACC,OAAP,CAAef,KAA7B;AACH,KAhBU;AAiBX,KAACU,UAAU,CAACM,QAAZ,GAAuB,CAACJ,KAAD,EAAQE,MAAR,KAAkB;AACvCF,MAAAA,KAAK,CAACN,MAAN,GAAe,OAAf;AACAM,MAAAA,KAAK,CAACL,MAAN,GAAe,EAAf;AACAK,MAAAA,KAAK,CAACZ,KAAN,GAAcc,MAAM,CAACC,OAAP,CAAeE,OAA7B;AACH;AArBY;AARc,CAAD,CAA9B","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const loadlevels = createAsyncThunk('levels/loadLevels', async (userId) => {\n    try {\n        const response = await axios.get('http://localhost:1337/levels');\n        return response;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n    \n});\n\nconst levelSlice = createSlice({\n  name: 'levels',\n  initialState: {\n      status: 'idle',\n      error: null,\n      levels: [],\n  },\n  reducers:{},\n  extraReducers: {\n      // You can show loading state in the UI\n      [loadLevels.pending]: (state)=> {\n          state.status = 'loading';\n          state.error = null;\n      }, \n      // Render the API response\n      [loadLevels.fulfilled]: (state, action)=> {\n          state.status = 'fulfilled';\n          state.error = null;\n          state.levels = action.payload.data.levels;\n      },\n      // Display error state\n      [loadLevels.error]: (state, action)=> {\n          state.status = 'error';\n          state.error = action.payload.error;\n      },  \n      [loadLevels.rejected]: (state, action)=> {\n        state.status = 'error';\n        state.levels = [];\n        state.error = action.payload.message; \n    },\n    \n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}