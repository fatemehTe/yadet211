{"ast":null,"code":"var _jsxFileName = \"/home/fateme/Documents/projects/yadet2/src/components/level/level.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CustomCircularProgressbar from '../circular-progress-bar/circular-progress-bar';\nimport './level.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level(props) {\n  let courses = props.courses.slice();\n  let grid = props.grid.split(\"-\");\n  let active = props.active;\n  let id = props.id;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"levelContainer\",\n    style: {\n      backgroundColor: active ? 'transparent' : '#F3F2F2',\n      borderColor: active ? 'transparent' : 'lightgrey'\n    },\n    children: grid.map((grid, step) => {\n      let sliced = courses.splice(0, grid);\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: sliced.map((course, step2) => {\n          // let stepUse = step.toString();\n          return /*#__PURE__*/_jsxDEV(Col, {\n            xxs: \"auto\",\n            xs: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(CustomCircularProgressbar, { ...props,\n              text: course.courseLabel,\n              degree: course.degree,\n              maxDegree: course.maxDegree,\n              progress: active ? course.progress : 0,\n              active: active,\n              step: course.id.toString(),\n              id: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 41\n            }, this)\n          }, step2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this);\n        })\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Level;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"sources":["/home/fateme/Documents/projects/yadet2/src/components/level/level.js"],"names":["React","Container","Row","Col","CustomCircularProgressbar","Level","props","courses","slice","grid","split","active","id","backgroundColor","borderColor","map","step","sliced","splice","course","step2","courseLabel","degree","maxDegree","progress","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,yBAAP,MAAsC,gDAAtC;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcC,KAAd,EAAd;AACA,MAAIC,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,CAAX;AACA,MAAIC,MAAM,GAAGL,KAAK,CAACK,MAAnB;AACA,MAAIC,EAAE,GAAGN,KAAK,CAACM,EAAf;AACA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAEF,MAAM,GACnB,aADmB,GAEnB,SAHD;AAIHG,MAAAA,WAAW,EAAEH,MAAM,GACf,aADe,GAEf;AAND,KADX;AAAA,cAUKF,IAAI,CAACM,GAAL,CAAS,CAACN,IAAD,EAAOO,IAAP,KAAgB;AACtB,UAAIC,MAAM,GAAGV,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkBT,IAAlB,CAAb;AACA,0BACI,QAAC,GAAD;AAAgB,QAAA,SAAS,EAAC,wBAA1B;AAAA,kBAEQQ,MAAM,CAACF,GAAP,CAAW,CAACI,MAAD,EAASC,KAAT,KAAmB;AAC1B;AACA,8BACI,QAAC,GAAD;AAAiB,YAAA,GAAG,EAAC,MAArB;AACI,YAAA,EAAE,EAAC,MADP;AACc,YAAA,EAAE,EAAC,MADjB;AACwB,YAAA,EAAE,EAAC,MAD3B;AAAA,mCAEI,QAAC,yBAAD,OACQd,KADR;AAEI,cAAA,IAAI,EAAEa,MAAM,CAACE,WAFjB;AAGI,cAAA,MAAM,EAAEF,MAAM,CAACG,MAHnB;AAII,cAAA,SAAS,EAAEH,MAAM,CAACI,SAJtB;AAKI,cAAA,QAAQ,EAAEZ,MAAM,GACZQ,MAAM,CAACK,QADK,GAEZ,CAPR;AAQI,cAAA,MAAM,EAAEb,MARZ;AASI,cAAA,IAAI,EAAEQ,MAAM,CAACP,EAAP,CAAUa,QAAV,EATV;AAUI,cAAA,EAAE,EAAEb;AAVR;AAAA;AAAA;AAAA;AAAA;AAFJ,aAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBH,SAnBD;AAFR,SAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AA0BH,KA5BA;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;KAhDuBX,K","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CustomCircularProgressbar from '../circular-progress-bar/circular-progress-bar';\nimport './level.css';\n\nexport default function Level(props) {\n\n    let courses = props.courses.slice()\n    let grid = props.grid.split(\"-\")\n    let active = props.active;\n    let id = props.id;\n    return (\n        <Container className='levelContainer'\n            style={{\n                backgroundColor: active ?\n                    'transparent' :\n                    '#F3F2F2',\n                borderColor: active ?\n                    'transparent' :\n                    'lightgrey'\n            }}\n        >\n            {grid.map((grid, step) => {\n                let sliced = courses.splice(0, grid)\n                return (\n                    <Row key={step} className=\"justify-content-center\">\n                        {\n                            sliced.map((course, step2) => {\n                                // let stepUse = step.toString();\n                                return (\n                                    <Col key={step2} xxs=\"auto\"\n                                        xs=\"auto\" md=\"auto\" sm=\"auto\">\n                                        <CustomCircularProgressbar\n                                            {...props}\n                                            text={course.courseLabel}\n                                            degree={course.degree}\n                                            maxDegree={course.maxDegree}\n                                            progress={active ?\n                                                course.progress :\n                                                0}\n                                            active={active}\n                                            step={course.id.toString()}\n                                            id={id}\n                                        />\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n                )\n            })}\n        </Container>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}